{
    "swagger": "2.0",
    "info": {
        "description": "A reservation API project assignment.",
        "title": "Reservations API",
        "contact": {},
        "version": "Preview 1.0.0"
    },
    "basePath": "/",
    "paths": {
        "/changestate/{chargepointID}/{connectorID}": {
            "post": {
                "description": "Experimental feature that allows use of all the possible connector states. This is useful when debugging, but can create possible edge cases (Suggestion: only use it on \"Available\" connectors since those will never have a reservation). The body parameter \"state\" can be either \"Available\", \"Unavailable\", \"Charging\" or \"Reserved\". A possible use case for this endpoint would be maintenance on a connector, setting it to \"Unavailable\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experimental"
                ],
                "summary": "Forcefully change the state of a connector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chargepoint ID",
                        "name": "chargepointID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Connector ID",
                        "name": "connectorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.ChangeConnectorStateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/charge/{chargepointID}/{connectorID}": {
            "post": {
                "description": "For a user to begin charging, they need to have an open reservation for the chargepoint and connector. They need to connect in the 10 minute \"expiry\" time period (time of reservation + 10 minutes), otherwise the reservation ends. If the user does connect in time, then they charge for the remainder of the \"charging\" time period specified in the reservation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chargepoints"
                ],
                "summary": "Start charging",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chargepoint ID",
                        "name": "chargepointID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Connector ID",
                        "name": "connectorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.ChargeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chargepoints": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chargepoints"
                ],
                "summary": "Get all chargepoints",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Chargepoint"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chargepoints/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chargepoints"
                ],
                "summary": "Get information about a chargepoint by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chargepoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Chargepoint"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chargepoints"
                ],
                "summary": "Create a new chargepoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chargepoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.CreateChargepointRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reservations": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Get all reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reservation"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reservations/{chargepointID}/{connectorID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a reservation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chargepoint ID",
                        "name": "chargepointID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Connector ID",
                        "name": "connectorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.ReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get information about a user by their ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpoints.ChangeConnectorStateRequest": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                }
            }
        },
        "endpoints.ChargeRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "endpoints.CreateChargepointRequest": {
            "type": "object",
            "properties": {
                "connectors": {
                    "type": "integer"
                }
            }
        },
        "endpoints.CreateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "endpoints.ReservationRequest": {
            "type": "object",
            "properties": {
                "minutes": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.Chargepoint": {
            "type": "object",
            "properties": {
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Connector"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.Connector": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Reservation": {
            "type": "object",
            "properties": {
                "chargepoint": {
                    "type": "string"
                },
                "chargingTime": {
                    "type": "string"
                },
                "connector": {
                    "type": "integer"
                },
                "expiryTime": {
                    "type": "string"
                },
                "hasFinishedCharging": {
                    "type": "boolean"
                },
                "hasStartedCharging": {
                    "type": "boolean"
                },
                "id": {
                    "description": "Suggestion for IDs: currently, we use UnixNano() for the ID because for the demonstration, it is sufficient, but I would recommend swapping to something like Mongo ObjectIDs because they're less likely to conflict. For the demo, it's fine!",
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}